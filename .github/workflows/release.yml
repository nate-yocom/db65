name: CD

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Get version
      id: get_version
      run: echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

    - name: Restore cargo cache
      uses: Swatinem/rust-cache@v2
      env:
        cache-name: ci
      with:
        shared-key: ${{ matrix.os }}-${{ env.cache-name }}-stable

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy

    - name: Build
      run: cargo build --release




      if: matrix.os == 'windows-latest'
    - name: ReleaseWin
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: ${{ contains(github.ref, '-') }}
        files: |
          ./target/release/db65.exe

      if: matrix.os == 'macos-latest'
    - name: ReleaseMac
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: ${{ contains(github.ref, '-') }}
        files: |
              ./target/release/db65

      if: matrix.os == 'ubuntu-latest'
    - name: ReleaseLinux
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: ${{ contains(github.ref, '-') }}
        files: |
            ./target/release/db65

      
